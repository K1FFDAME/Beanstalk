type Token @entity {
  id: ID!
  decimals: BigInt!
  lastPriceUSD: BigDecimal!
}

type Bean @entity {
  id: ID!
  decimals: BigInt!
  supply: BigInt!
  marketCap: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidity: BigInt!
  liquidityUSD: BigDecimal!
  price: BigDecimal!
  crosses: Int!
  lastCross: BigInt!
  lastSeason: Int!
  pools: [Pool!]! #@derivedFrom(field: "bean") # The pools containing the Bean token 
  hourlySnapshot: [BeanHourlySnapshot!]! @derivedFrom(field: "bean")
  dailySnapshot: [BeanDailySnapshot!]! @derivedFrom(field: "bean")
}

type BeanHourlySnapshot @entity {
  id: ID!
  bean: Bean!
  totalSupply: BigInt!
  marketCap: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidity: BigInt!
  liquidityUSD: BigDecimal!
  price: BigDecimal!
  crosses: Int!
  deltaBeans: BigInt!
  deltaVolume: BigInt!
  deltaVolumeUSD: BigDecimal!
  deltaLiquidity: BigInt!
  deltaLiquidityUSD: BigDecimal!
  deltaCrosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "hourlySnapshot")
  season: Int!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type BeanDailySnapshot @entity {
  id: ID!
  bean: Bean!
  totalSupply: BigInt!
  marketCap: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidity: BigInt!
  liquidityUSD: BigDecimal!
  price: BigDecimal!
  crosses: Int!
  deltaBeans: BigInt!
  deltaVolume: BigInt!
  deltaVolumeUSD: BigDecimal!
  deltaLiquidity: BigInt!
  deltaLiquidityUSD: BigDecimal!
  deltaCrosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "dailySnapshot")
  season: Int!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type Cross @entity {
  id: ID!
  pool: Pool!
  price: BigDecimal!
  timestamp: BigInt!
  timeSinceLastCross: BigInt!
  above: Boolean!
  hourlySnapshot: BeanHourlySnapshot!
  dailySnapshot: BeanDailySnapshot!
  poolHourlySnapshot: PoolHourlySnapshot!
  poolDailySnapshot: PoolDailySnapshot!
}

type Pool @entity {
  id: ID!
  bean: Bean!
  lastSeason: Int!
  lastPrice: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidity: BigInt!
  liquidityUSD: BigDecimal!
  crosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "pool")
  deltaBeans: BigInt!
  hourlySnapshot: [PoolHourlySnapshot!]! @derivedFrom(field: "pool")
  dailySnapshot: [PoolDailySnapshot!]! @derivedFrom(field: "pool")
}

type PoolHourlySnapshot @entity {
  id: ID!
  pool: Pool!
  lastPrice: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidity: BigInt!
  liquidityUSD: BigDecimal!
  crosses: Int!
  utilization: BigDecimal!
  deltaBeans: BigInt!
  deltaVolume: BigInt!
  deltaVolumeUSD: BigDecimal!
  deltaLiquidity: BigInt!
  deltaLiquidityUSD: BigDecimal!
  deltaCrosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "poolHourlySnapshot")
  season: Int!
  createdAt: BigInt!
  updatedAt: BigInt!
}


type PoolDailySnapshot @entity {
  id: ID!
  pool: Pool!
  lastPrice: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidity: BigInt!
  liquidityUSD: BigDecimal!
  crosses: Int!
  utilization: BigDecimal!
  deltaBeans: BigInt!
  deltaVolume: BigInt!
  deltaVolumeUSD: BigDecimal!
  deltaLiquidity: BigInt!
  deltaLiquidityUSD: BigDecimal!
  deltaCrosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "poolDailySnapshot")
  season: Int!
  createdAt: BigInt!
  updatedAt: BigInt!
}
