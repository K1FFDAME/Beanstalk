type Token @entity {
  "Smart contract address of the token"
  id: ID!

  "Number of decimals"
  decimals: BigInt!

  "Last USD price calculated"
  lastPriceUSD: BigDecimal!
}

type Bean @entity {
  "Contract address of the Bean token"
  id: ID!

  "Current supply"
  supply: BigInt!

  "Latest price seen"
  price: BigDecimal!

  "Current market cap"
  marketCap: BigDecimal!

  "Cumulative volume of beans traded"
  volume: BigInt!

  "Cumulative volume in USD value"
  volumeUSD: BigDecimal!

  "Current liquidity in USD value"
  liquidityUSD: BigDecimal!

  "Cumulative number of crosses"
  crosses: Int!

  "Last timestamp a cross was seen"
  lastCross: BigInt!
  "Last season seen from Beanstalk"
  lastSeason: Int!

  "Pools that include this Bean"
  pools: [Pool!]!

  "Hourly snapshot of Bean data"
  hourlySnapshot: [BeanHourlySnapshot!]! @derivedFrom(field: "bean")

  "Daily snapshot of Bean data"
  dailySnapshot: [BeanDailySnapshot!]! @derivedFrom(field: "bean")
}

type BeanHourlySnapshot @entity {
  id: ID!
  bean: Bean!
  totalSupply: BigInt!
  marketCap: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidityUSD: BigDecimal!
  price: BigDecimal!
  crosses: Int!
  deltaBeans: BigInt!
  deltaVolume: BigInt!
  deltaVolumeUSD: BigDecimal!
  deltaLiquidityUSD: BigDecimal!
  deltaCrosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "hourlySnapshot")
  season: Int!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type BeanDailySnapshot @entity {
  id: ID!
  bean: Bean!
  totalSupply: BigInt!
  marketCap: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidityUSD: BigDecimal!
  price: BigDecimal!
  crosses: Int!
  deltaBeans: BigInt!
  deltaVolume: BigInt!
  deltaVolumeUSD: BigDecimal!
  deltaLiquidityUSD: BigDecimal!
  deltaCrosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "dailySnapshot")
  season: Int!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type Cross @entity {
  id: ID!
  pool: Pool!
  price: BigDecimal!
  timestamp: BigInt!
  timeSinceLastCross: BigInt!
  above: Boolean!
  hourlySnapshot: BeanHourlySnapshot!
  dailySnapshot: BeanDailySnapshot!
  poolHourlySnapshot: PoolHourlySnapshot!
  poolDailySnapshot: PoolDailySnapshot!
}

type Pool @entity {
  id: ID!
  bean: Bean!
  reserves: [BigInt!]!
  lastSeason: Int!
  lastPrice: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidityUSD: BigDecimal!
  crosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "pool")
  deltaBeans: BigInt!
  hourlySnapshot: [PoolHourlySnapshot!]! @derivedFrom(field: "pool")
  dailySnapshot: [PoolDailySnapshot!]! @derivedFrom(field: "pool")
}

type PoolHourlySnapshot @entity {
  id: ID!
  pool: Pool!
  reserves: [BigInt!]!
  lastPrice: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidityUSD: BigDecimal!
  crosses: Int!
  utilization: BigDecimal!
  deltaBeans: BigInt!
  deltaReserves: [BigInt!]!
  deltaVolume: BigInt!
  deltaVolumeUSD: BigDecimal!
  deltaLiquidityUSD: BigDecimal!
  deltaCrosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "poolHourlySnapshot")
  season: Int!
  createdAt: BigInt!
  updatedAt: BigInt!
}

type PoolDailySnapshot @entity {
  id: ID!
  pool: Pool!
  reserves: [BigInt!]!
  lastPrice: BigDecimal!
  volume: BigInt!
  volumeUSD: BigDecimal!
  liquidityUSD: BigDecimal!
  crosses: Int!
  utilization: BigDecimal!
  deltaBeans: BigInt!
  deltaReserves: [BigInt!]!
  deltaVolume: BigInt!
  deltaVolumeUSD: BigDecimal!
  deltaLiquidityUSD: BigDecimal!
  deltaCrosses: Int!
  crossEvents: [Cross!]! @derivedFrom(field: "poolDailySnapshot")
  season: Int!
  createdAt: BigInt!
  updatedAt: BigInt!
}
